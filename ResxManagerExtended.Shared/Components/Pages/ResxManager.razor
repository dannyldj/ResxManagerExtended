@page "/resx-manager"
@using ResxManagerExtended.Shared.Data
@inherits FluxorComponent

<PageTitle>@Loc["ResxManager"]</PageTitle>

<FluentLayout>
    <FluentLabel Typo="Typography.PaneHeader" MarginBlock="0 20px">
        @Loc["ResxManager"]
    </FluentLabel>

    @if (ResourceState.Value.TopNode is null)
    {
        @if (ResourceState.Value.IsResourceLoading)
        {
            <FluentProgressRing/>
        }
        else
        {
            <FluentLabel>@Loc["DirectorySetupGuide"]</FluentLabel>
        }
    }
    else
    {
        <FluentSplitter Panel1MinSize="250px" Panel1Size="25%"
                        Style="height:-webkit-fill-available;overflow-y:auto">
            <Panel1>
                <FluentTreeView Items="[ResourceState.Value.TopNode]"
                                SelectedItemChanged="async item => await GetDataGrid(item)"
                                LazyLoadItems="true" Style="overflow:auto">
                    <ItemTemplate>
                        @context.Text.Split(Path.DirectorySeparatorChar).Last()
                    </ItemTemplate>
                </FluentTreeView>
            </Panel1>
            <Panel2>
                <FluentLayout>
                    <FluentStack VerticalAlignment="VerticalAlignment.Center"
                                 HorizontalGap="4" Style="padding:0 0 4px 8px">
                        <FluentCheckbox @bind-Value="_showPath" Label="@Loc["Path"]"/>
                        <FluentCheckbox @bind-Value="_showComment" Label="@Loc["Comment"]"/>
                        <FluentSpacer/>
                        <FluentSearch @bind-Value="_searchValue"
                                      Immediate="true" ImmediateDelay="300"
                                      Placeholder="@Loc["SearchPlaceholder"]"/>
                        <FluentButton Id="importOrExport" Appearance="Appearance.Accent"
                                      IconStart="new Icons.Regular.Size16.ArrowDownload()"
                                      IconEnd="new Icons.Regular.Size16.ArrowExportUp()"
                                      Title="@($"{Loc["Import"]} / {Loc["Export"]}")"
                                      OnClick="() => _showPopover = !_showPopover">
                            |
                        </FluentButton>
                        <FluentPopover VerticalThreshold="170" AnchorId="importOrExport" @bind-Open="_showPopover">
                            <Body>
                            <FluentStack>
                                <FluentRadioGroup @bind-Value="_popoverType">
                                    <FluentRadio Value="PopoverType.Import">@Loc["Import"]</FluentRadio>
                                    <FluentRadio Value="PopoverType.Export">@Loc["Export"]</FluentRadio>
                                </FluentRadioGroup>
                            </FluentStack>
                            </Body>
                            <Footer>
                                <FluentStack HorizontalAlignment="HorizontalAlignment.Right">
                                    <FluentButton Appearance="Appearance.Accent"
                                                  OnClick="OnConfirm">
                                        @Loc["Confirm"]
                                    </FluentButton>
                                </FluentStack>
                            </Footer>
                        </FluentPopover>
                    </FluentStack>

                    <div Style="height:100%;overflow:auto">
                        <FluentDataGrid TGridItem="ResourceView"
                                        Items="@SearchedItems" Loading="@_isLoading"
                                        ShowHover="true" Virtualize="true"
                                        GenerateHeader="GenerateHeaderOption.Sticky"
                                        Style="min-width:max-content">
                            <ChildContent>
                                <PropertyColumn Width="200px" Property="@(c => c.Key)" Sortable="true" Tooltip="true"/>

                                @if (_showPath)
                                {
                                    <PropertyColumn Width="200px" Title="@Loc["Path"]" Property="@(c => c.Path)" Tooltip="true"/>
                                }

                                @if (_showComment)
                                {
                                    <PropertyColumn Width="200px" Title="@Loc["Comment"]" Property="@(c => c.Comment)" Tooltip="true"/>
                                }

                                @foreach (var culture in _cultures)
                                {
                                    <PropertyColumn Width="300px" Title="@(string.IsNullOrEmpty(culture.Name) ? Loc["NeuturalValue"] : culture.Name)"
                                                    Property="@(c => c.Columns.GetValueOrDefault(culture))" Tooltip="true"/>
                                }
                            </ChildContent>
                            <EmptyContent>
                                <FluentIcon Value="new Icons.Filled.Size24.Snooze()" Color="@Color.Accent"/>&nbsp; @Loc["NothingHere"]
                            </EmptyContent>
                            <LoadingContent>
                                <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Center">
                                    Loading...<br/>
                                    <FluentProgress Width="240px"/>
                                </FluentStack>
                            </LoadingContent>
                        </FluentDataGrid>
                    </div>
                </FluentLayout>
            </Panel2>
        </FluentSplitter>
    }
</FluentLayout>