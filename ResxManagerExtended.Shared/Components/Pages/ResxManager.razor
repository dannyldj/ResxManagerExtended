@page "/resx-manager"
@using ResxManagerExtended.Shared.Data
@inherits FluxorComponent

<PageTitle>@Loc["ResxManager"]</PageTitle>

<FluentLayout>
    <FluentLabel Typo="Typography.PaneHeader" MarginBlock="0 20px">
        @Loc["ResxManager"]
    </FluentLabel>

    @if (SettingState.Value.TopNode is null)
    {
        @if (SettingState.Value.IsResourceLoading)
        {
            <FluentProgressRing/>
        }
        else
        {
            <FluentLabel>@Loc["DirectorySetupGuide"]</FluentLabel>
        }
    }
    else
    {
        <FluentSplitter Panel1MinSize="250px" Panel1Size="25%"
                        Style="height:-webkit-fill-available;overflow-y:auto">
            <Panel1>
                <FluentTreeView Items="[SettingState.Value.TopNode]"
                                SelectedItemChanged="OnSelectedItemChanged"
                                Style="overflow:auto"/>
            </Panel1>
            <Panel2>
                <FluentLayout>
                    <FluentStack VerticalAlignment="VerticalAlignment.Center"
                                 HorizontalGap="2" Style="padding:4px">
                        <FluentCheckbox @bind-Value="_showPath" Label="@Loc["Path"]"/>
                        <FluentCheckbox @bind-Value="_showComment" Label="@Loc["Comment"]"/>
                        <FluentSpacer/>
                        <FluentSearch @bind-Value="_searchValue"
                                      Immediate="true" ImmediateDelay="300"
                                      Placeholder="@Loc["SearchPlaceholder"]"/>
                    </FluentStack>

                    <div Style="height:100%;overflow:auto">
                        <FluentDataGrid TGridItem="ResourceView" Items="@SearchedItems" Loading="@_isLoading"
                                        ShowHover="true" Virtualize="true" ResizableColumns="true"
                                        GenerateHeader="GenerateHeaderOption.Sticky" Style="min-width:max-content">
                            <ChildContent>
                                <PropertyColumn Width="200px" Property="@(c => c.Key)" Sortable="true"/>

                                @if (_showPath)
                                {
                                    <PropertyColumn Width="200px" Title="@Loc["Path"]" Property="@(c => c.Path)"/>
                                }
                                
                                @if (_showComment)
                                {
                                    <PropertyColumn Width="200px" Title="@Loc["Comment"]" Property="@(c => c.Comment)" />
                                }

                                @foreach (var culture in _cultures)
                                {
                                    <PropertyColumn Width="300px"
                                                    Title="@(string.IsNullOrEmpty(culture.Name) ? Loc["NeuturalValue"] : culture.Name)"
                                                    Property="@(c => c.Columns.GetValueOrDefault(culture))"
                                                    TooltipText="@(c => c.Columns.GetValueOrDefault(culture))"/>
                                }
                            </ChildContent>
                            <EmptyContent>
                                <FluentIcon Value="@(new Icons.Filled.Size24.Crown())" Color="@Color.Accent"/>&nbsp; @Loc["NothingHere"]
                            </EmptyContent>
                            <LoadingContent>
                                <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Center">
                                    Loading...<br/>
                                    <FluentProgress Width="240px"/>
                                </FluentStack>
                            </LoadingContent>
                        </FluentDataGrid>
                    </div>
                </FluentLayout>
            </Panel2>
        </FluentSplitter>
    }
</FluentLayout>